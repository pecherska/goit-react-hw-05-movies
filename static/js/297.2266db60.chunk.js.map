{"version":3,"file":"static/js/297.2266db60.chunk.js","mappings":"8TAEaA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAYE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6GAMzBC,EAAaJ,EAAAA,GAAAA,OAAaK,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,+XAe1BG,GAAcN,EAAAA,EAAAA,IAAOO,EAAAA,GAAPP,CAAaQ,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,uG,SC2CxC,EAzDkB,WAChB,IAAAM,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAlDI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GACpCI,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAL,EAAAA,EAAAA,GAAAG,EAAA,GAA/BG,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAAkCJ,EAAAA,EAAAA,WAAS,GAAMK,GAAAT,EAAAA,EAAAA,GAAAQ,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAA4BR,EAAAA,EAAAA,UAAS,IAAGS,GAAAb,EAAAA,EAAAA,GAAAY,EAAA,GAAjCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GA8BxB,OAzBAG,EAAAA,EAAAA,YAAU,WACR,GAAIf,EAAagB,IAAI,SAAU,CAC7B,IAAMC,EAAY,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEEC,EAAAA,EAAAA,IAAe1B,EAAagB,IAAI,UAAU,KAAD,EAEpC,GAFlBM,EAAIC,EAAAI,KAEVb,EAAUQ,EAAKM,SACY,IAAvBN,EAAKO,cAAmB,CAAAN,EAAAE,KAAA,QACsB,OAAhDK,EAAAA,GAAAA,KAAW,qCAAqCP,EAAAQ,OAAA,iBAG9CT,EAAKO,cAAgB,GACvBC,EAAAA,GAAAA,QAAc,4BACfP,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAS,GAAAT,EAAA,SAEDjB,EAASiB,EAAAS,GAAMC,SAASX,MAAM,QAEV,OAFUC,EAAAC,KAAA,GAE9Bd,GAAa,GAAOa,EAAAW,OAAA,6BAAAX,EAAAY,OAAA,GAAAd,EAAA,yBAEvB,kBAjBiB,OAAAH,EAAAkB,MAAA,KAAAC,UAAA,KAmBlBpB,GACF,CACF,GAAG,CAACjB,KAGFsC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAc,IACdrC,GAASyB,EAAAA,GAAAA,MAAYzB,IAEtBoC,EAAAA,EAAAA,KAACE,EAAAA,GAAM,CAACC,cAAe,CAAEC,MAAO,IAAMC,SAlCrB,SAAHC,GAAmB,IAAbF,EAAKE,EAALF,MACtB5C,EAAgB,CAAE+C,MAAOH,GAC3B,EAgCiEL,UAC3DF,EAAAA,EAAAA,MAACpD,EAAU,CAAAsD,SAAA,EACTC,EAAAA,EAAAA,KAAChD,EAAW,CACVwD,KAAK,OACLC,KAAK,QACLC,aAAa,MACbC,WAAS,EACTC,YAAY,8BAEdZ,EAAAA,EAAAA,KAAClD,EAAU,CAAC0D,KAAK,gBAGpBxC,IAAagC,EAAAA,EAAAA,KAACa,EAAAA,EAAM,KACrBb,EAAAA,EAAAA,KAACc,EAAAA,EAAU,CAAC1C,OAAQA,MAG1B,ECvDA,EAPe,WACb,OACE4B,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAACe,EAAS,KAGhB,C","sources":["components/Searchbar/Searchbar.styled.jsx","components/Searchbar/Searchbar.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Form, Field } from 'formik';\nexport const FormikForm = styled(Form)`\n  display: flex;\n  justify-content: flex-start;\n  width: 100%;\n  padding: 10px 10px 10px 10px;\n`;\nexport const FormButton = styled.button`\n  padding: 20px;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-image: url('https://images.freeimages.com/fic/images/icons/989/ivista_2/256/search.png');\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n`;\n\nexport const FormikInput = styled(Field)`\n  display: inline-block;\n\n  font-size: 20px;\n  padding-left: 5px;\n  padding-right: 5px;\n`;\n","import { useSearchParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { Formik } from 'formik';\nimport { fetchApiSearch } from 'api/fetchApi';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport Loader from 'components/Loader/Loader';\nimport { FormikForm, FormButton, FormikInput } from './Searchbar.styled';\n\nconst Searchbar = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [movies, setMovies] = useState([]);\n  const handleSubmit = ({ value }) => {\n    setSearchParams({ query: value });\n  };\n\n  useEffect(() => {\n    if (searchParams.get('query')) {\n      const searchMovies = async () => {\n        try {\n          const data = await fetchApiSearch(searchParams.get('query'));\n\n          setMovies(data.results);\n          if (data.total_results === 0) {\n            toast.warn('Nothing found! Try again, please.');\n            return;\n          }\n          if (data.total_results > 1) {\n            toast.success(`Hooray! We found movies `);\n          }\n        } catch (error) {\n          setError(error.response.data);\n        } finally {\n          setIsLoading(false);\n        }\n      };\n\n      searchMovies();\n    }\n  }, [searchParams]);\n\n  return (\n    <>\n      <ToastContainer />\n      {error && toast.error(error)}\n\n      <Formik initialValues={{ value: '' }} onSubmit={handleSubmit}>\n        <FormikForm>\n          <FormikInput\n            type=\"text\"\n            name=\"value\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n          />\n          <FormButton type=\"submit\"></FormButton>\n        </FormikForm>\n      </Formik>\n      {isLoading && <Loader />}\n      <MoviesList movies={movies} />\n    </>\n  );\n};\n\nexport default Searchbar;\n","import Searchbar from 'components/Searchbar/Searchbar';\n\nconst Movies = () => {\n  return (\n    <div>\n      <Searchbar />\n    </div>\n  );\n};\nexport default Movies;\n"],"names":["FormikForm","styled","Form","_templateObject","_taggedTemplateLiteral","FormButton","_templateObject2","FormikInput","Field","_templateObject3","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","_useState","useState","_useState2","error","setError","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","movies","setMovies","useEffect","get","searchMovies","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","fetchApiSearch","sent","results","total_results","toast","abrupt","t0","response","finish","stop","apply","arguments","_jsxs","_Fragment","children","_jsx","ToastContainer","Formik","initialValues","value","onSubmit","_ref","query","type","name","autoComplete","autoFocus","placeholder","Loader","MoviesList","Searchbar"],"sourceRoot":""}