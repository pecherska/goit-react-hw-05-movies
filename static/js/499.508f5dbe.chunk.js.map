{"version":3,"file":"static/js/499.508f5dbe.chunk.js","mappings":"sMAEaA,E,QAAeC,GAAAA,EAAQC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,2G,SCIpC,EAJiB,SAAHC,GAAqB,IAAfC,EAAOD,EAAPC,QAClB,OAAOC,EAAAA,EAAAA,KAACN,EAAY,CAAAO,SAAEF,GACxB,C,iMCFaG,EAAkBP,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,oKAM3BM,EAAYR,EAAAA,GAAAA,EAAQS,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,kE,SCgDjC,EAjDgB,WACd,IAAQQ,GAAOC,EAAAA,EAAAA,MAAPD,GACFE,EAAUF,EAChBG,QAAQC,IAAIJ,GACZ,IAAAK,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAC1BI,GAAkCL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAA0BT,EAAAA,EAAAA,UAAS,IAAGU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAA/BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAsBtB,OApBAG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAmB,eAAA3B,GAAA4B,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACP,OAAnBb,GAAa,GAAMW,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEEC,EAAAA,EAAAA,IAAe1B,GAAS,KAAD,EAApCsB,EAAIC,EAAAI,KACV1B,QAAQC,IAAIoB,GACZd,EAAWc,EAAKM,SAChBZ,EAAS,IACTJ,GAAa,GAAOW,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAM,GAAAN,EAAA,SAEpBP,EAASO,EAAAM,GAAMC,SAASR,MACxBV,GAAa,GAAO,QAEA,OAFAW,EAAAC,KAAA,GAEpBZ,GAAa,GAAOW,EAAAQ,OAAA,6BAAAR,EAAAS,OAAA,GAAAX,EAAA,yBAEvB,kBAdwB,OAAA9B,EAAA0C,MAAA,KAAAC,UAAA,KAgBzBhB,GACF,GAAG,CAAClB,KAGFmC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAA1C,SAAA,EACED,EAAAA,EAAAA,KAAC4C,EAAAA,GAAc,IACdtB,GAASuB,EAAAA,GAAAA,MAAYvB,GAErBJ,IAAalB,EAAAA,EAAAA,KAAC8C,EAAAA,EAAM,KACrB9C,EAAAA,EAAAA,KAAA,MAAAC,SACsB,IAAnBa,EAAQiC,OACPjC,EAAQkC,KAAI,SAAAC,GAAM,OAChBP,EAAAA,EAAAA,MAACxC,EAAe,CAAAD,SAAA,EACdyC,EAAAA,EAAAA,MAACvC,EAAS,CAAAF,SAAA,CAAC,IAAEgD,EAAOC,OAAO,QAC3BlD,EAAAA,EAAAA,KAACG,EAAS,CAAAF,SAAEgD,EAAOE,YAFCF,EAAO5C,GAGX,KAGpBL,EAAAA,EAAAA,KAACoD,EAAAA,QAAQ,CAACrD,QAAS,kDAK7B,C","sources":["components/NotFound/NotFound.styled.jsx","components/NotFound/NotFound.jsx","pages/Reviews/Reviews.styled.jsx","pages/Reviews/Reviews.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const NotFoundMess = styled.p`\n  font-size: 18px;\n  line-height: 24px;\n  font-weight: 500;\n  margin: 16px;\n  color: black;\n`;\n","import { NotFoundMess } from './NotFound.styled';\n\nconst NotFound = ({ message }) => {\n  return <NotFoundMess>{message}</NotFoundMess>;\n};\n\nexport default NotFound;\n","import styled from 'styled-components';\n\nexport const ReviewListItems = styled.li`\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nexport const TextStyle = styled.p`\n  padding: 16px;\n  font-weight: 500;\n  color: black;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchApReviews } from 'api/fetchApi';\nimport NotFound from 'components/NotFound/NotFound';\nimport { ToastContainer, toast } from 'react-toastify';\nimport Loader from 'components/Loader/Loader';\nimport { ReviewListItems, TextStyle } from './Reviews.styled';\nconst Reviews = () => {\n  const { id } = useParams();\n  const movieId = id;\n  console.log(id);\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    const searchMoviesReviews = async () => {\n      setIsLoading(true);\n      try {\n        const data = await fetchApReviews(movieId);\n        console.log(data);\n        setReviews(data.results);\n        setError('');\n        setIsLoading(false);\n      } catch (error) {\n        setError(error.response.data);\n        setIsLoading(false);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    searchMoviesReviews();\n  }, [movieId]);\n\n  return (\n    <>\n      <ToastContainer />\n      {error && toast.error(error)}\n\n      {isLoading && <Loader />}\n      <ul>\n        {reviews.length !== 0 ? (\n          reviews.map(review => (\n            <ReviewListItems key={review.id}>\n              <TextStyle> {review.author}:</TextStyle>\n              <TextStyle>{review.content}</TextStyle>\n            </ReviewListItems>\n          ))\n        ) : (\n          <NotFound message={\"We don't have any reviews for this movie.\"} />\n        )}\n      </ul>\n    </>\n  );\n};\nexport default Reviews;\n<li>\n  <p>\n    <p></p>\n  </p>\n</li>;\n"],"names":["NotFoundMess","styled","_templateObject","_taggedTemplateLiteral","_ref","message","_jsx","children","ReviewListItems","TextStyle","_templateObject2","id","useParams","movieId","console","log","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","useEffect","searchMoviesReviews","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","fetchApReviews","sent","results","t0","response","finish","stop","apply","arguments","_jsxs","_Fragment","ToastContainer","toast","Loader","length","map","review","author","content","NotFound"],"sourceRoot":""}